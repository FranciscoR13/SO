TP-SO

FEED:
-arg. linha cmd user
-obter/validar cmd user
-cada cliente tem de ter um pipe para receber as respostas do maneger(usar o pid como nome do pipe)
-so abre dois canais logo abrir uma vez e fechar no final

~$./feed joao
	argv[1]

->Name Pipe
	access();--verifica se o namePipe existe,ou verificar se open falha
	open(w);
	do{
		...
		(cmd)
		...
		write(); -- tem de ir a informação de quem, está a enviar(pedido--LOGIN)
		...
	}while(...);
	close();

	escreve.c (codigo aulas)

MANAGER:
-obter var ambiente
-obter/validar cmd admin
-o manager so precisa de um pipe para receber os cmd dos users
-abrir com (w/r) -> para o servidor escrever para ele próprio para poupar recurso para não ficar sem clientes
-usar access para garantir que existe apenas um servidor
-empacotar mensagens, delimitar as mensagens
-associar o pid ao clienete -> estrutura de dados
-codificar os comandos com numeros
-no ciclo abrir->escrever->fechar quando comunica com os user != do que acontece no feed

~$./manager

->Name Pipes
	mkfifo(); cria
	open(R);
	read(tubo);
	…
	close(tubo)
	unlink(); remove--quem cria remove

	le.c (codigo aulas)

CMD:
mkfifo tubo
ls -l
namePipe ... 0 ... tubo
...
rm tubo
unlink tubo
