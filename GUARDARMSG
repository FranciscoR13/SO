// Função para guardar mensagens persistentes de todos os tópicos em um ficheiro
// ESTA AQUI ESTA A FUNCIONAR, SO NÃO ESTA A GUARDAR BEM O PID DO USER QUE ENVIOU A MENSAGEM, MAS EU DESCONFIO QUE SEJA PROBLEMA AO GUARDAR O PID QUANDO SE MANDA A MENSAGEM.
void guardarMensagens(DATA *d, const char *nomeFicheiro) {
    FILE *ficheiro = fopen(nomeFicheiro, "w");
    if (ficheiro == NULL) {
        perror("Erro ao abrir o ficheiro para escrita");
        return;
    }

    for (int i = 0; i < d->nTopicos; i++) {
        for (int j = 0; j < d->topicos[i].nMsgs; j++) {           
            fprintf(ficheiro, "%s %d %d %s\n", d->topicos[i].nome_topico,d->topicos[i].mensagens[j].pid,d->topicos[i].mensagens[j].duracao,d->topicos[i].mensagens[j].corpo_msg);
        }
    }

    fclose(ficheiro);
    printf("Mensagens guardadas com sucesso em %s.\n", nomeFicheiro);
}

// Função para recuperar mensagens persistentes de um ficheiro
//ESTA É TUDO CHATGPT MAS A LOGICA DEVE TAR BOA, SO DEVE SER NECESSARIO ALTERAR PARA AS NOSSAS STRUCTS
void recuperarMensagens(DATA *data, const char *nomeFicheiro) {
    FILE *ficheiro = fopen("a", "r");
    if (ficheiro == NULL) {
        perror("Erro ao abrir o ficheiro para leitura");
        return;
    }

    char linha[512];
    while (fgets(linha, sizeof(linha), ficheiro) != NULL) {
        char nome_topico[TAM];
        MENSAGEM msg;
        if (sscanf(linha, "%s %d %d %s", nome_topico, &msg.pid, &msg.duracao, msg.corpo_msg) == 4) {
            // Encontrar ou criar o tópico correspondente
            TOPICO *topico = NULL;
            for (int i = 0; i < data->nTopicos; i++) {
                if (strcmp(data->topicos[i].nome_topico, nome_topico) == 0) {
                    topico = &data->topicos[i];
                    break;
                }
            }

            if (!topico && data->nTopicos < MAX_TOPICS) {
                topico = &data->topicos[data->nTopicos++];
                strcpy(topico->nome_topico, nome_topico);
                topico->nMsgs = 0;
            }

            if (topico && topico->nMsgs < MAX_MSG_PER) {
                topico->mensagens[topico->nMsgs++] = msg;
            }
        }
    }

    fclose(ficheiro);
    printf("Mensagens recuperadas de %s.\n", nomeFicheiro);
}



